using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace RpgAPI.Migrations
{
    /// <inheritdoc />
    public partial class MigracaoUmParaUm : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 141, 8, 119, 7, 186, 103, 162, 25, 139, 67, 123, 39, 133, 37, 26, 124, 186, 167, 166, 5, 46, 95, 102, 236, 152, 131, 7, 103, 128, 94, 126, 125, 194, 77, 93, 99, 112, 114, 242, 187, 48, 245, 166, 102, 77, 196, 50, 94, 177, 171, 201, 190, 166, 206, 192, 62, 39, 214, 12, 103, 63, 151, 70, 114 }, new byte[] { 80, 212, 160, 35, 191, 239, 63, 137, 232, 231, 11, 163, 90, 101, 201, 169, 81, 188, 25, 147, 134, 247, 122, 181, 123, 155, 37, 232, 2, 17, 144, 37, 207, 97, 245, 88, 250, 212, 60, 92, 252, 32, 115, 167, 242, 106, 250, 151, 30, 240, 123, 249, 172, 1, 42, 51, 232, 193, 209, 207, 243, 161, 209, 52, 82, 59, 186, 167, 34, 245, 17, 9, 60, 138, 75, 21, 238, 158, 77, 48, 44, 146, 104, 230, 75, 182, 12, 203, 1, 77, 107, 60, 128, 254, 53, 110, 71, 166, 101, 206, 113, 60, 35, 128, 27, 233, 70, 220, 116, 227, 198, 144, 168, 233, 21, 228, 173, 96, 200, 161, 163, 95, 254, 9, 80, 244, 24, 99 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 10, 27, 25, 215, 225, 18, 86, 166, 230, 216, 28, 229, 217, 178, 49, 166, 55, 217, 174, 116, 143, 183, 224, 83, 157, 38, 203, 1, 28, 207, 230, 57, 57, 170, 165, 81, 174, 78, 68, 0, 131, 167, 249, 39, 248, 88, 250, 158, 216, 161, 167, 201, 228, 187, 44, 72, 2, 211, 79, 37, 52, 44, 181, 185 }, new byte[] { 76, 207, 227, 173, 233, 20, 138, 60, 43, 76, 226, 178, 49, 129, 127, 44, 127, 194, 8, 230, 93, 207, 30, 206, 127, 162, 85, 254, 86, 184, 0, 128, 52, 224, 11, 174, 108, 229, 225, 134, 6, 158, 77, 161, 206, 54, 38, 11, 184, 107, 97, 56, 88, 67, 220, 154, 183, 163, 59, 215, 207, 217, 247, 236, 242, 178, 253, 166, 173, 75, 69, 213, 130, 254, 63, 132, 177, 108, 115, 201, 187, 63, 23, 158, 235, 10, 3, 196, 128, 134, 224, 201, 145, 234, 42, 56, 184, 104, 98, 53, 58, 118, 62, 178, 59, 34, 12, 105, 208, 245, 75, 10, 98, 236, 226, 129, 193, 165, 96, 71, 76, 22, 39, 159, 148, 21, 104, 246 } });
        }
    }
}
