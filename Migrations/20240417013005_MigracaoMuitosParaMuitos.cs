using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace RpgAPI.Migrations
{
    /// <inheritdoc />
    public partial class MigracaoMuitosParaMuitos : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 253, 225, 16, 228, 240, 87, 116, 139, 174, 239, 159, 71, 18, 66, 3, 65, 23, 74, 20, 40, 210, 236, 190, 86, 116, 65, 201, 245, 215, 4, 212, 236, 248, 42, 81, 80, 200, 217, 249, 166, 248, 6, 101, 173, 221, 67, 177, 46, 138, 208, 14, 151, 208, 134, 31, 206, 201, 31, 131, 121, 32, 222, 108, 20 }, new byte[] { 139, 215, 22, 36, 85, 199, 74, 105, 220, 168, 71, 53, 88, 161, 219, 0, 131, 12, 41, 136, 147, 160, 4, 242, 210, 69, 184, 15, 28, 28, 166, 252, 202, 242, 166, 99, 191, 51, 36, 125, 249, 188, 144, 212, 103, 19, 72, 57, 187, 239, 88, 85, 38, 152, 100, 128, 203, 52, 198, 216, 57, 30, 193, 183, 254, 128, 132, 12, 238, 23, 36, 203, 54, 239, 118, 113, 11, 25, 70, 12, 0, 125, 92, 224, 190, 184, 2, 162, 120, 92, 6, 56, 211, 220, 253, 157, 242, 103, 247, 102, 55, 176, 105, 156, 16, 199, 91, 1, 101, 46, 9, 122, 52, 129, 166, 18, 211, 76, 53, 163, 84, 56, 247, 146, 139, 193, 38, 68 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 141, 8, 119, 7, 186, 103, 162, 25, 139, 67, 123, 39, 133, 37, 26, 124, 186, 167, 166, 5, 46, 95, 102, 236, 152, 131, 7, 103, 128, 94, 126, 125, 194, 77, 93, 99, 112, 114, 242, 187, 48, 245, 166, 102, 77, 196, 50, 94, 177, 171, 201, 190, 166, 206, 192, 62, 39, 214, 12, 103, 63, 151, 70, 114 }, new byte[] { 80, 212, 160, 35, 191, 239, 63, 137, 232, 231, 11, 163, 90, 101, 201, 169, 81, 188, 25, 147, 134, 247, 122, 181, 123, 155, 37, 232, 2, 17, 144, 37, 207, 97, 245, 88, 250, 212, 60, 92, 252, 32, 115, 167, 242, 106, 250, 151, 30, 240, 123, 249, 172, 1, 42, 51, 232, 193, 209, 207, 243, 161, 209, 52, 82, 59, 186, 167, 34, 245, 17, 9, 60, 138, 75, 21, 238, 158, 77, 48, 44, 146, 104, 230, 75, 182, 12, 203, 1, 77, 107, 60, 128, 254, 53, 110, 71, 166, 101, 206, 113, 60, 35, 128, 27, 233, 70, 220, 116, 227, 198, 144, 168, 233, 21, 228, 173, 96, 200, 161, 163, 95, 254, 9, 80, 244, 24, 99 } });
        }
    }
}
